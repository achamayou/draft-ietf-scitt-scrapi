{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-08-15T00:31:39.709547+00:00",
  "repo": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "ready-for-pr",
      "description": "",
      "color": "0E8A16"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOLJjbks6B0kV-",
      "title": "using media types for errors",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/2",
      "state": "CLOSED",
      "author": "pdxjohnny",
      "authorAssociation": "NONE",
      "assignees": [
        "aj-stein-nist"
      ],
      "labels": [
        "ready-for-pr"
      ],
      "body": "Would be great to be able to return an object in addition to or instead of a string for errors. Or allow for other properties which would be fully content-typeable to a custom response object within the error response on claim insert failure.\r\n\r\nLack of this prevents an automated conversation to resolve issues with claim insertion. Human readable strings are great, but ideally a human doesn't even get involved and machines can auto remediate issues due to detailed failure reasoning. This way the a human readable string might only be needed after a failed machine driven insert conversation (more than one call response).\r\n\r\n- References\r\n  - https://github.com/ietf-scitt/draft-birkholz-scitt-scrapi/issues/4\r\n    - https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/62",
      "createdAt": "2024-03-11T01:34:22Z",
      "updatedAt": "2024-08-06T14:54:13Z",
      "closedAt": "2024-08-06T14:54:13Z",
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I do agree but it seems per the spec we are following [RFC7807](https://www.rfc-editor.org/rfc/rfc7807#page-7) and they have this to say about our desired change in this request.\r\n\r\n   Consumers SHOULD NOT parse the \"detail\" member for information;\r\n   extensions are more suitable and less error-prone ways to obtain such\r\n   information.\r\n\r\nI am looking more into these mysterious \"extensions\" mentioned in this spec. ",
          "createdAt": "2024-03-15T23:38:20Z",
          "updatedAt": "2024-03-15T23:38:20Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Editors call discussion: All errors should be returned with json object.\r\nReference the review: https://datatracker.ietf.org/doc/review-ietf-scitt-scrapi-01-httpdir-early-miller-2024-03-10/\r\nReady for PR",
          "createdAt": "2024-06-11T14:30:06Z",
          "updatedAt": "2024-06-11T14:30:06Z"
        },
        {
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "body": "PR incoming for application/problem+json response from @aj-stein-nist ",
          "createdAt": "2024-06-25T14:38:38Z",
          "updatedAt": "2024-06-25T14:38:38Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I am going to work on the PR. I didn't realize the content type is properly set per the commits above in [`e2f23a9`](https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/blob/e2f23a9ce8621f3a4392608c2f97c85c2a32fcdf/draft-ietf-scitt-scrapi.md?plain=1#L118). So I will PR the follow on extension bit for custom fields in the PR. If there is no consensus, we can stick with `\"detail\": \"...\"` with the appropriate content type and close it out when rejecting the PR.",
          "createdAt": "2024-06-28T04:19:19Z",
          "updatedAt": "2024-06-28T04:19:19Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Per discussion on the editor's call, no one can see an immediate need for use of extension fields per the cited RFC for specific, structured data for error message for debugging or reporting.\r\n\r\nI am closing for now. We can revisit later as the need comes up. The content types for errors are already used today.",
          "createdAt": "2024-07-02T14:39:16Z",
          "updatedAt": "2024-07-02T14:39:16Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "body": "@SteveLasker or other authors that own this repo, I cannot close this issue because I did not create this issues, apologies. I need one of you to close the issue for me.",
          "createdAt": "2024-07-02T14:40:15Z",
          "updatedAt": "2024-07-02T14:40:15Z"
        },
        {
          "author": "roywill",
          "authorAssociation": "NONE",
          "body": "I like the guidance we are giving in this area, but we use an example to define the specific error to return.  \r\n\r\n    As an example, submitting a Signed Statement with an unsupported signature algorithm **would** return a 400 Bad Request status code and the following body:\r\n\r\nMust it be 400 or is that a suggestion?",
          "createdAt": "2024-07-25T18:03:10Z",
          "updatedAt": "2024-07-25T18:03:10Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Must it be 400 or is that a suggestion?\r\n\r\nhas to be a MAY or \"might\" or \"could\" or something. Surely.",
          "createdAt": "2024-07-26T00:56:36Z",
          "updatedAt": "2024-07-26T00:56:36Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "closing, with #25 as the next step",
          "createdAt": "2024-08-06T14:54:13Z",
          "updatedAt": "2024-08-06T14:54:13Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOLJjbks6CFgNv",
      "title": "Add GS1 examples",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/3",
      "state": "CLOSED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "see https://www.rfc-editor.org/rfc/rfc5134.html",
      "createdAt": "2024-03-12T19:06:56Z",
      "updatedAt": "2024-07-02T14:34:51Z",
      "closedAt": "2024-07-02T14:34:51Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing per discussion w/@OR13",
          "createdAt": "2024-07-02T14:34:51Z",
          "updatedAt": "2024-07-02T14:34:51Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOLJjbks6CguBZ",
      "title": "Test suite",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/4",
      "state": "CLOSED",
      "author": "aj-stein-nist",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I am not sure this is within the scope of the formal working group or better as an \"outside\" community effort, but with the relocation of this draft into the ietf-wg-scitt org and its upload to datatracker, have we considered having a test suite with sample artifacts, signed statements, and transparent statements that conform to the API spec here as a test harness of sorts? I have seen *some* IETF and other standard bodies groups making such test suites. I am opening this issue here to gauge interest and determine if making it \"inline in this repo\" is within scope or not.",
      "createdAt": "2024-03-15T23:42:41Z",
      "updatedAt": "2024-06-25T14:51:52Z",
      "closedAt": "2024-06-25T14:51:51Z",
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Good to have a test suite, but we haven't been maintaining the emulator. \r\nKeeping for further discussion.",
          "createdAt": "2024-06-11T14:32:46Z",
          "updatedAt": "2024-06-11T14:32:46Z"
        },
        {
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Per discussion on an editors' call today, there was a good discussion around the scope of work around the reference implementation based on the SCRAPI specification. That would require layering on top of the specification, picking optional implementation choices for authentication, identities, and other decisions outside the scope of the architecture as well. Also picking statements about artifact and dealing with the opaqueness of it in a way is further beyond the scope of the IETF WG.\r\n\r\nOthers on the call would welcome such an effort as a community work item, but not to be maintained in this repo or GitHub organization. I will volunteer to pursue this work in the [SCITT Community](https://github.com/scitt-community/). I am closing this issue for now.",
          "createdAt": "2024-06-25T14:51:52Z",
          "updatedAt": "2024-06-25T14:51:52Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOLJjbks6JpIwT",
      "title": "API for Collections of Statements",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/9",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "JAG-UK"
      ],
      "labels": [],
      "body": "APIs which enables users to find a collection of signed statements based on protected, or unprotected header properties\r\n\r\nA client may send any known or custom header property, or combination\r\n\r\nTODO:\r\n- Better formated example\r\n- Add paging\r\n\r\nCollection of Signed Statement Header Properties\r\nREQUEST:\r\n```\r\nGET /findstatements?issuer=my-identity.me&subject=my-product-id HTTP/1.1\r\nHost: transparency.example\r\nAccept: application/json\r\n```\r\nRESPONSE:\r\na paged collection of references to Signed Statements, and the possible payload locations\r\n```json\r\n{\r\n   \"signed-statements\": [\r\n      {\r\n         \"protected-headers\": {\r\n            \"cwt_claims\": {\r\n               \"iss\": \"my-identity.me\",\r\n               \"sub\": \"my-product-id\"\r\n            },\r\n            \"content_type\": \"application/json\",\r\n            \"alg\": \"1\",\r\n            \"kid\": \"abc123\",\r\n            \"location-hint\": \"service.storage/abc123\",\r\n            \"detached-hash\": \"abc123...321cba\"\r\n         },\r\n         \"unprotected-headers\": {\r\n            \"registered\": \"sometime\"\r\n         }\r\n      },\r\n      {\r\n         \"protected-headers\": {\r\n            \"cwt_claims\": {\r\n               \"iss\": \"my-identity.me\",\r\n               \"sub\": \"my-product-id\"\r\n            },\r\n            \"content_type\": \"application/spdx+json\",\r\n            \"alg\": \"1\",\r\n            \"kid\": \"abc123\",\r\n            \"location-hint\": \"service.storage/def456\",\r\n            \"detached-hash\": \"def246...642fed\"\r\n         },\r\n         \"unprotected-headers\": {\r\n            \"registered\": \"sometime+1\"\r\n         }\r\n      }\r\n   ]\r\n}\r\n```",
      "createdAt": "2024-05-21T23:09:37Z",
      "updatedAt": "2024-08-06T14:50:02Z",
      "closedAt": null,
      "comments": [
        {
          "author": "howethomas",
          "authorAssociation": "NONE",
          "body": "So, for the integration with vCon example, subject=\"my-product-id\" could simply be the vcon uuid?  So, an audit trail of a particular vCon could be supplied by this API endpoint? ",
          "createdAt": "2024-06-01T03:00:02Z",
          "updatedAt": "2024-06-01T03:00:02Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Yup, exactly. Any issuer that wants to make a statement about the vCon would use the identifie, enabling filtering on statements for the vCon, from different issuers, and even different content-types ",
          "createdAt": "2024-06-01T21:54:46Z",
          "updatedAt": "2024-06-01T21:54:46Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Lets look at COAP / CORE / OSCORE / ACE for examples of good CBOR APIs, and copy them.",
          "createdAt": "2024-07-02T15:11:29Z",
          "updatedAt": "2024-07-02T15:11:29Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "For some inspiration: https://datatracker.ietf.org/doc/html/draft-ietf-ace-revoked-token-notification-08#section-3.2.1",
          "createdAt": "2024-07-02T15:12:41Z",
          "updatedAt": "2024-07-02T15:12:41Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOLJjbks6J6Dgd",
      "title": "Workflow and details for signed-statement/issue",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/10",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "JAG-UK"
      ],
      "labels": [],
      "body": "Opening this issue to explore:\r\n\r\n- Does [/signed-statements/issue](https://ietf-wg-scitt.github.io/draft-ietf-scitt-scrapi/draft-ietf-scitt-scrapi.html#name-issue-statement) also register the newly signed statement, or return a signed statement to then be submitted via [2.1.2. ](https://ietf-wg-scitt.github.io/draft-ietf-scitt-scrapi/draft-ietf-scitt-scrapi.html#section-2.1.2)[Signed Statement Registration](https://ietf-wg-scitt.github.io/draft-ietf-scitt-scrapi/draft-ietf-scitt-scrapi.html#name-signed-statement-registrati)?\r\n- What are the properties of a Signed Statement, when signed by the Transparency Service? \r\n  - How does the TS represent it has signed on behalf of the service-authenticated user, meaning are we deferring the signing to be a root CA, where the service is maintaining identity documents for the user? Or, is there some on-behalf of flow?",
      "createdAt": "2024-05-23T19:41:45Z",
      "updatedAt": "2024-08-06T14:50:03Z",
      "closedAt": null,
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Currently the endpoint returns a Signed Statement, and then you have to send that along to the Register endpoint.\r\nWhile an all-in-one API seems attractive, it would also risk getting complex as parameters for each part of the operation are added and commingled. I'd suggest leaving it as it is for now.\r\n\r\n> How does the TS represent it has signed on behalf of the service-authenticated user,\r\n\r\nSuggest we not over-specify this. Too many options and this isn't special compared to any other signing service, or an internal security server farm, or whatever. So where do we draw the line on showing this? ",
          "createdAt": "2024-07-26T00:55:07Z",
          "updatedAt": "2024-07-26T00:55:07Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOLJjbks6NKviq",
      "title": "async registration policy checking apears disallowed by 2.1.2",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/12",
      "state": "OPEN",
      "author": "robinbryce",
      "authorAssociation": "NONE",
      "assignees": [
        "JAG-UK"
      ],
      "labels": [],
      "body": "In [2.1.2. ](https://www.ietf.org/archive/id/draft-ietf-scitt-scrapi-01.html#section-2.1.2)[Signed Statement Registration](https://www.ietf.org/archive/id/draft-ietf-scitt-scrapi-01.html#name-signed-statement-registrati)\r\n\r\nWe have \"The Registration Policy for the Transparency Service MUST be applied to the payload bytes, before any additional processing is performed\"\r\n\r\nThis appears to rule out implementations which do async processing of registration statements.\r\n\r\nI understood that the combined effect, and intent, of\r\n\r\nhttps://www.ietf.org/archive/id/draft-ietf-scitt-architecture-06.html#name-registration 5. & 7. With the subsequent text\r\n\r\n\"A Transparency Service MUST ensure that a Signed Statement is registered before releasing its Receipt.\"\r\n\r\nWas to enable the implementation to defer application of registration policies until receipt issuance.\r\n\r\nI think, if that is consistent with the intent of the authors intent, a specific requirement along the lines of \"Registration policies MUST be applied before issuing a Receipt\" would be much clearer\r\n",
      "createdAt": "2024-06-23T07:38:29Z",
      "updatedAt": "2024-08-06T14:50:03Z",
      "closedAt": null,
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Does this wording actually belong in SCRAPI at all, or should it be removed because these semantics are specified in the architecture? I'm thinking delete.",
          "createdAt": "2024-07-26T00:50:17Z",
          "updatedAt": "2024-07-26T00:50:17Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOLJjbks6NKxkq",
      "title": "2.1.2.2 Status 202 requires the resolve receipts endpoint to do double duty",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/13",
      "state": "OPEN",
      "author": "robinbryce",
      "authorAssociation": "NONE",
      "assignees": [
        "JAG-UK"
      ],
      "labels": [],
      "body": "https://www.ietf.org/archive/id/draft-ietf-scitt-scrapi-01.html#name-status-202-registration-is-\r\n\r\n\"If 202 is returned, then clients should wait until Registration succeeded or failed by polling the receipt endpoint using the receipt identifier returned in the response.\"\r\n\r\nI understand that to mean \"poll the optional interface defined by 2.2.4 Resolve Receipt\". \r\n\r\nThere are some  issues with a request model that mixes \"poll for operation a (OP A) completion, with do operation b (OP B)\"\r\n\r\n1. It forces complexity and mixed state handling on the endpoint implementation. It has to both determine if OP A was extant and is now complete, then it has to follow on and do dependent OP B. Mixed state handling can require that  single instance has access to two differently provisioned and permissioned data stores.\r\n2. It forces the same authorization & authentication model on both OP A and OP B. (I will raise a seperate issue for another concerne regading the authentication SHOULD for Resolve Receipt)\r\n3. Implementors will likely want different rate limits for those actions. Checking if an extant operation is complete is light weight and can be designed for \"polling clients\". Producing a receipts, potentially finalising registration, could be a much heavier load. I would want the ability to seperately rate limit that request.\r\n\r\n\r\nI very much prefered the previous draft's approach of having a distinct endpoint on which to check for the completion of async registration",
      "createdAt": "2024-06-23T07:55:30Z",
      "updatedAt": "2024-08-06T14:50:04Z",
      "closedAt": null,
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed, I think a distinct operation handler makes sense and works cleanly from implementation experience. I can put up a PR to reflect this for the group to comment on",
          "createdAt": "2024-07-26T00:48:41Z",
          "updatedAt": "2024-07-26T00:48:41Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "I_kwDOLJjbks6NKyTp",
      "title": "2.2.4 Resolve Receipt encourages authentication",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/14",
      "state": "OPEN",
      "author": "robinbryce",
      "authorAssociation": "NONE",
      "assignees": [
        "JAG-UK"
      ],
      "labels": [],
      "body": "https://www.ietf.org/archive/id/draft-ietf-scitt-scrapi-01.html#name-resolve-receipt\r\n\r\nI don't understand *why* this is desired:\r\n\r\n\"Authentication SHOULD be implemented for this endpoint\"\r\n\r\nIf the material in a receipt is, or can be, considered private to the issuer, then this should be a MUST.\r\n\r\nInstinctively I have always thought of receipts as essentially public documents. Whilst they are revealing, they are designed to be passed on to other parties.\r\n\r\nIf the intent is to permit implementations to provide for both public and private receipts, I think that model needs to be spelled out explicitly.\r\n\r\nIt would seem reasonable to me for Resolve Receipt to provide \"the defined public aspects of a receipt\" when the request was not authenticated. And the possibly sensitive parts otherwise\r\n\r\nIn practice, there are definitely usecases for obtaining a receipt for a statement issued by a different party. Its not clear at all to me how or if the authentication requirement here interacts with that.",
      "createdAt": "2024-06-23T08:04:12Z",
      "updatedAt": "2024-08-09T11:35:03Z",
      "closedAt": null,
      "comments": [
        {
          "author": "robinbryce",
          "authorAssociation": "NONE",
          "body": "I'm led to understand this SHOULD is intended to \"solve\" the issues of rate limiting and fairness. I think SCITT should have an opinion on whether anonoymous access to receipts for any statement is required of implementations. But whether or not it does consider it required, it seems very transparency service specific how the implications of this are dealt with. An Authentication requirement like this on these is confusing to me either way.",
          "createdAt": "2024-07-21T09:09:27Z",
          "updatedAt": "2024-07-21T09:09:27Z"
        },
        {
          "author": "roywill",
          "authorAssociation": "NONE",
          "body": "This is a tricky section.  We recommend that rate limiting could be used, but not MUST or SHOULD.  Within a corporation's network this may be a non-issue.  It is a solution to solve a potential problem, but it is up to the operator.",
          "createdAt": "2024-07-25T18:00:15Z",
          "updatedAt": "2024-07-25T18:00:15Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is related to things I'm working on already: I'll put up a PR later",
          "createdAt": "2024-08-06T14:51:43Z",
          "updatedAt": "2024-08-06T14:51:43Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In PR #27 I have added an option for Transparency Services to return a 429 response, and have deliberately not included specific request detail in there so that the TS can choose any trigger (global or local) for this.\r\n\r\nLet's see if that's enough: I don't think rate limiting is a good reason to enforce authentication",
          "createdAt": "2024-08-09T11:35:02Z",
          "updatedAt": "2024-08-09T11:35:02Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOLJjbks6PmMGP",
      "title": "2.1.1 & 2.1.2 Missing intent statements.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/18",
      "state": "OPEN",
      "author": "mkhraisha",
      "authorAssociation": "NONE",
      "assignees": [
        "JAG-UK"
      ],
      "labels": [],
      "body": "The optional API endpoints have intent statements that outline the goal of the Endpoints for example 2.2.1 (Issue Signed Statement Endpoint) has this intent statement:\r\n\r\n```\r\nThis endpoint enables a Transparency Service to be an issuer of Signed Statements on behalf of authenticated clients. This supports cases where a client lacks the ability to perform complex cryptographic operations, but can be authenticated and report statements and measurements.\r\n```\r\nSuch a statement is currently missing from both:\r\n2.1.1 (Transparency Configuration) and 2.1.2 (Signed Statement Registration).\r\n\r\n",
      "createdAt": "2024-07-15T16:29:53Z",
      "updatedAt": "2024-08-06T14:50:58Z",
      "closedAt": null,
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'll take this one and put a PR up with consistency for all the endpoints",
          "createdAt": "2024-08-06T14:50:57Z",
          "updatedAt": "2024-08-06T14:50:57Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOLJjbks6Q4Uq5",
      "title": "2.1.2 Signed Statement Registration MUST implement authentication.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/19",
      "state": "OPEN",
      "author": "roywill",
      "authorAssociation": "NONE",
      "assignees": [
        "JAG-UK"
      ],
      "labels": [],
      "body": "In the case of a government end point, why must client authentication be implemented.  The signature on the statement is the authentication for the content and is ultimately who is making a reputation statement.",
      "createdAt": "2024-07-25T18:06:08Z",
      "updatedAt": "2024-08-06T14:50:05Z",
      "closedAt": null,
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed. In addition to this I think there are several places where we need to clean up seemingly helpful implementation comments which are actually harmful. For instance the mention of using auth for rate limiting is a fine thing to say but it's nothing to do with SCITT and will be done in other layers by any sensible implementation.",
          "createdAt": "2024-07-26T00:46:48Z",
          "updatedAt": "2024-07-26T00:46:48Z"
        }
      ]
    },
    {
      "number": 20,
      "id": "I_kwDOLJjbks6Q4YdH",
      "title": "2.1.2 The identifier definitions are not clearly describing what it is meant to solve.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/20",
      "state": "OPEN",
      "author": "roywill",
      "authorAssociation": "NONE",
      "assignees": [
        "roywill"
      ],
      "labels": [],
      "body": "From: [2.1.2. ](https://ietf-wg-scitt.github.io/draft-ietf-scitt-scrapi/draft-ietf-scitt-scrapi.html#section-2.1.2)[Signed Statement Registration](https://ietf-wg-scitt.github.io/draft-ietf-scitt-scrapi/draft-ietf-scitt-scrapi.html#name-signed-statement-registrati)\r\n\r\n> If registration succeeds the following identifier MAY be used to refer to the Signed Statement that was accepted\r\n\r\nFrom an outside space, the identifier of the receipt is important to be stable.  In the context of a ledger, the indexing into the append only log is not discussed to support any indexing other way.\r\n\r\nSo the identifier for a Signed Statement is interesting but what is the use case.\r\n\r\nThe Identifier for the payload is super unclear.  There can be multiple signed statements against the same payload, and in the case of a \"detached\" signatures it is unclear if this is referencing the simple HASH of the artifact or the document holding the HASH.",
      "createdAt": "2024-07-25T18:12:09Z",
      "updatedAt": "2024-08-06T15:00:23Z",
      "closedAt": null,
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is an important thing to solve. Note that I believe we can, nay _should_, have a different ID for 'operation is running' vs the long lived durable ID which is returned once reigstration succeeds, which leaves us more free to play with the sematics of the ID format.\r\n\r\nWe implemented something for the hackathon but it's very placeholder-y so I can put in a rough PR for this but it'll probably need a lot of discussion. In particular there are both benefits and drawbacks to deterministically deriving the identifier from the statement.",
          "createdAt": "2024-07-26T00:45:04Z",
          "updatedAt": "2024-07-26T00:45:04Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "I_kwDOLJjbks6Q4aE-",
      "title": "2.1.2 Fresh receipts may be requested through the resource identified in the Location header.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/21",
      "state": "OPEN",
      "author": "roywill",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Since this section is talking about registration, why is refresh paradigm left dangling at the end.  Is it thought to use this same method to ask for a refresh?  I can see getting a new receipt, but that may fail due to the time validity of the signed statement.  If you expect it to be based on previous data on the log, then it needs to be indexed based on the previous receipt.",
      "createdAt": "2024-07-25T18:14:41Z",
      "updatedAt": "2024-07-26T00:41:01Z",
      "closedAt": null,
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Sounds sensible. Something like '/reissue?receiptid=xyzy\r\n\r\nWhere 'xyzy' is the durable ID of a receipts that is already included in the log (I'm being deliberately obtuse with the ID format since that's under question in a separate Issue).\r\n\r\nPlease submit a PR that matches your use case needs.",
          "createdAt": "2024-07-26T00:41:00Z",
          "updatedAt": "2024-07-26T00:41:00Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "I_kwDOLJjbks6Q4b5o",
      "title": "2.1.2.2 Registration is running.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/22",
      "state": "OPEN",
      "author": "roywill",
      "authorAssociation": "NONE",
      "assignees": [
        "JAG-UK"
      ],
      "labels": [],
      "body": "The key returned in the example is the identifier of the payload or the signed statement as they are the same HASH.  If it is the payload, this precludes simultaneously registering two signed statements simultaneously.  I suspect you really want to supply a transaction token not reference anything about the signed statement nor the payload.\r\n\r\nIf it is truly the receipt, then assuming the HASH can be computed of the final receipt seems a cart before horse statement.",
      "createdAt": "2024-07-25T18:18:22Z",
      "updatedAt": "2024-08-09T11:24:58Z",
      "closedAt": null,
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Agreed that name scheme doesn't work. There are a couple of different problems here:\r\n* the collision risk identified remains a problem for durable identifiers for Receipts or registered Signed Statements. We need to tackle that separately\r\n* for the identifier returned in a 'registration is running' case, we need to return an ID for the _operation_ against which the client polls. Attention should be given to properties of this ID such as surviving pod crashes.\r\n\r\nWe implemented this for the 120 hackathon, I'll put up a R and the group can comment. ",
          "createdAt": "2024-07-26T00:38:45Z",
          "updatedAt": "2024-07-26T00:38:45Z"
        },
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "In my PR for Issue #23 I changed 'receipt' to 'identifier' which opens the door to fixing this. Probably needs more explanation but don't want to change this until we've had the discussion on PR #27 ",
          "createdAt": "2024-08-09T11:24:57Z",
          "updatedAt": "2024-08-09T11:24:57Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "I_kwDOLJjbks6Q4deq",
      "title": "2.1.2 Registration is Running",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/23",
      "state": "OPEN",
      "author": "roywill",
      "authorAssociation": "NONE",
      "assignees": [
        "JAG-UK"
      ],
      "labels": [],
      "body": "What is the API to poll for complete work?  Can the server then stipulate don't ask for a period of n seconds or not?",
      "createdAt": "2024-07-25T18:21:28Z",
      "updatedAt": "2024-08-06T14:50:05Z",
      "closedAt": null,
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "We implemented this for the 120 hackathon. I'll submit a PR with the shape we used and then the group can comment on it",
          "createdAt": "2024-07-26T00:33:19Z",
          "updatedAt": "2024-07-26T00:33:19Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "I_kwDOLJjbks6Q4e1x",
      "title": "2.2.1 Issue Signed Statement.",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/24",
      "state": "OPEN",
      "author": "roywill",
      "authorAssociation": "NONE",
      "assignees": [
        "JAG-UK"
      ],
      "labels": [],
      "body": "Are we asserting that the authentication identity to the end point is the identity to sign the content with?  I think we need to clarify that this can be completely different.  I do question why we need to specify a validFrom date?",
      "createdAt": "2024-07-25T18:24:34Z",
      "updatedAt": "2024-08-06T14:50:06Z",
      "closedAt": null,
      "comments": [
        {
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Are we asserting that the authentication identity to the end point is the identity to sign the content with?\r\n\r\nThis should be clarified/specified indeed.\r\n\r\nGiven the context of this endpoint being environments that can't sign their own Statements, the credential can't be 1:1 equivalent to an Issuer at a deep technical/cryptographic level. Therefore some logic has to be applied in the endpoint to convert the authenticated API client into a SCITT Issuer.\r\n\r\nGiven _that_, it seems reasonable to leave it fairly open, for example by adding: \r\n\r\n\"\r\n* The Transparency Service SHOULD use a different Issuer identity for each different API client\r\n* The Transparency Service SHOULD use the same Issuer identity for every call made by the same API client\r\n\"\r\n\r\nThis language is slightly sloppy but YKWIM.",
          "createdAt": "2024-07-26T00:32:34Z",
          "updatedAt": "2024-07-26T00:32:34Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "I_kwDOLJjbks6SGLhi",
      "title": "Error code example MUST not be normative",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/25",
      "state": "OPEN",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              I like the guidance we are giving in this area, but we use an example to define the specific error to return.  \r\n\r\n    As an example, submitting a Signed Statement with an unsupported signature algorithm **would** return a 400 Bad Request status code and the following body:\r\n\r\nMust it be 400 or is that a suggestion?\r\n\r\n_Originally posted by @roywill in https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/issues/2#issuecomment-2251099959_\r\n            ",
      "createdAt": "2024-08-06T14:53:52Z",
      "updatedAt": "2024-08-06T14:54:44Z",
      "closedAt": null,
      "comments": [
        {
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I can pick this one up per discussion in an editors' meeting.",
          "createdAt": "2024-08-06T14:54:43Z",
          "updatedAt": "2024-08-06T14:54:43Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOLJjbks5ofXEv",
      "title": "Pre IETF 119 Update",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/1",
      "state": "MERGED",
      "author": "OR13",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR updates SCRAPI to match the latest version of the architecture.",
      "createdAt": "2024-03-02T19:19:50Z",
      "updatedAt": "2024-03-04T15:13:42Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "baseRefName": "main",
      "baseRefOid": "9fc2fd4a794a53b8fc843bc5479e7a16cc03b13f",
      "headRepository": "OR13/draft-ietf-scitt-scrapi",
      "headRefName": "feat/pre-ietf-119-update",
      "headRefOid": "ec80348cc27ff0394a20f8ce6e2156deee264a13",
      "closedAt": "2024-03-04T15:13:42Z",
      "mergedAt": "2024-03-04T15:13:42Z",
      "mergedBy": "OR13",
      "mergeCommit": {
        "oid": "94b8e8d94e2f96ac2a76c28d7a6478d367cddff8"
      },
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "I tried pushing a revision to the datatracker from my fork... but it did not work... so unless this is published by some other author with write access before monday, we will be -00 for a solid IETF  with no updates : )",
          "createdAt": "2024-03-02T19:50:22Z",
          "updatedAt": "2024-03-02T19:50:22Z"
        },
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging based on requests to meet the draft cut off... assuming CI passes",
          "createdAt": "2024-03-04T15:13:16Z",
          "updatedAt": "2024-03-04T15:13:16Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOLJjbks5yBoZk",
          "commit": {
            "abbreviatedOid": "ec80348"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "We should get this up ASAP before the cutoff and prior to hackathon",
          "createdAt": "2024-03-03T15:42:03Z",
          "updatedAt": "2024-03-03T15:42:03Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLJjbks5yBovs",
          "commit": {
            "abbreviatedOid": "ec80348"
          },
          "author": "brentzundel",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-03T15:49:33Z",
          "updatedAt": "2024-03-03T15:49:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLJjbks5yHfez",
          "commit": {
            "abbreviatedOid": "ec80348"
          },
          "author": "henkbirkholz",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": ":ship: it",
          "createdAt": "2024-03-04T15:06:33Z",
          "updatedAt": "2024-03-04T15:06:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOLJjbks5p2OWP",
      "title": "Add Security Considerations consistent with RFC 3552",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/5",
      "state": "MERGED",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Hackathon entry for 119, fill in required elements from RFC 3552",
      "createdAt": "2024-03-17T00:26:38Z",
      "updatedAt": "2024-03-22T06:20:54Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "baseRefName": "main",
      "baseRefOid": "94b8e8d94e2f96ac2a76c28d7a6478d367cddff8",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "headRefName": "dev/jag-uk/security-considerations-section",
      "headRefOid": "6a81982412e1eb8c87545f25def8311c8beee013",
      "closedAt": "2024-03-22T00:14:34Z",
      "mergedAt": "2024-03-22T00:14:34Z",
      "mergedBy": "OR13",
      "mergeCommit": {
        "oid": "e53f9b56a9a3bdc93a313597196800ee019d0e7f"
      },
      "comments": [
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "I merged the markdown nits, but left the suggestions that should be reviewed by others.",
          "createdAt": "2024-03-18T07:44:45Z",
          "updatedAt": "2024-03-18T07:44:45Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOLJjbks5ztrQh",
          "commit": {
            "abbreviatedOid": "2726176"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-17T00:39:02Z",
          "updatedAt": "2024-03-17T00:39:06Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "What are those, does IETF actually specify any we can cite?",
              "createdAt": "2024-03-17T00:39:02Z",
              "updatedAt": "2024-03-17T00:39:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks5ztrVs",
          "commit": {
            "abbreviatedOid": "2726176"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-17T00:42:09Z",
          "updatedAt": "2024-03-17T00:42:15Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "In a number of ways, yes, in section 4.6 of 3552. Happy to reference that.\r\nThe rat limited comes specifically from SCITT arch and is not in 3552 but I think that's also fixable",
              "createdAt": "2024-03-17T00:42:09Z",
              "updatedAt": "2024-03-17T00:42:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks5ztrde",
          "commit": {
            "abbreviatedOid": "2726176"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-17T00:49:01Z",
          "updatedAt": "2024-03-17T00:49:01Z",
          "comments": [
            {
              "originalPosition": 82,
              "body": "Fair enough, I was looking for something like the I-D below but it seems expired anyway.\r\n\r\nhttps://datatracker.ietf.org/doc/draft-ietf-httpapi-ratelimit-headers/",
              "createdAt": "2024-03-17T00:49:01Z",
              "updatedAt": "2024-03-17T00:49:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks5ztrgW",
          "commit": {
            "abbreviatedOid": "2726176"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-17T00:51:00Z",
          "updatedAt": "2024-03-17T00:52:11Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "Minor nit\r\n\r\n```suggestion\r\n[SCITT-ARCH] defines 2 distinct roles that require authentication:\r\n```",
              "createdAt": "2024-03-17T00:51:00Z",
              "updatedAt": "2024-03-17T00:52:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks5zun1G",
          "commit": {
            "abbreviatedOid": "2726176"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-17T22:29:50Z",
          "updatedAt": "2024-03-17T22:29:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLJjbks5zwQ9n",
          "commit": {
            "abbreviatedOid": "2726176"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-18T05:57:59Z",
          "updatedAt": "2024-03-18T05:58:00Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\n - HTTP Authorization header with a bearer JWT\r\n```",
              "createdAt": "2024-03-18T05:58:00Z",
              "updatedAt": "2024-03-18T05:58:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks5zwRCU",
          "commit": {
            "abbreviatedOid": "2726176"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-18T05:58:10Z",
          "updatedAt": "2024-03-18T05:58:10Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\n - domain-bound API key\r\n```",
              "createdAt": "2024-03-18T05:58:10Z",
              "updatedAt": "2024-03-18T05:58:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks5zwRFN",
          "commit": {
            "abbreviatedOid": "2726176"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-18T05:58:21Z",
          "updatedAt": "2024-03-18T05:58:21Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\n - TLS client authentication\r\n```",
              "createdAt": "2024-03-18T05:58:21Z",
              "updatedAt": "2024-03-18T05:58:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks5zwRpC",
          "commit": {
            "abbreviatedOid": "2726176"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "A bunch of Markdown Nits, and some questions on the correlation between Issuer and RBAC, but happy to merge and iterate through additional PRs",
          "createdAt": "2024-03-18T06:00:42Z",
          "updatedAt": "2024-03-18T06:27:11Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Should there be a direct correlation between Issuers and Client Auths?\r\nI'm trying to think through the scenarios where this would be required.\r\n",
              "createdAt": "2024-03-18T06:00:42Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nand Transparency Services implementing this specification MUST allow\r\n```",
              "createdAt": "2024-03-18T06:01:43Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 54,
              "body": "```suggestion\r\n - Threats to strong identification, for example representing the\r\n```",
              "createdAt": "2024-03-18T06:02:17Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 56,
              "body": "```suggestion\r\n - Threats to payload integrity, for example changing the contents of\r\n```",
              "createdAt": "2024-03-18T06:02:25Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 58,
              "body": "```suggestion\r\n - Threats to non-equivocation, for example attacks that would enable\r\n```",
              "createdAt": "2024-03-18T06:02:44Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 97,
              "body": "Latest draft uses Relying Parties, over Verifiers\r\n```suggestion\r\nmisrepresentation of Issuer intent that could mislead later Relying Parties.\r\n```",
              "createdAt": "2024-03-18T06:09:54Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 102,
              "body": "Not sure the correlation between an authorized client and an Issuer. An authorized client may publish signed statements from many issuers, whether they're various software publishers or C2PA media issuers. \r\nI suppose a TS that wants to do something, could configure the correlation in their registration policy. But, wouldn't this be TS implementation specific?",
              "createdAt": "2024-03-18T06:13:04Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 112,
              "body": "```suggestion\r\n- Stolen client endpoint authentication credentials\r\n```",
              "createdAt": "2024-03-18T06:13:48Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 113,
              "body": "```suggestion\r\n- Stolen or misused Issuer keys held in the Transparency Service on\r\n```",
              "createdAt": "2024-03-18T06:13:57Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 140,
              "body": "```suggestion\r\nonce a statement is made, it is intended to be immutable and non-\r\n```",
              "createdAt": "2024-03-18T06:15:21Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 141,
              "body": "A reply attack could be done, that undoes an update:\r\n\r\n1. An issuer makes a statement, attesting to an artifact has met a set of compliance standards. `{\"compliance-2\": \"true\"}`\r\n2. The issuer discovers a vulnerability, making it no longer compliant with the standard: `{\"compliance-2\": \"false\"}`\r\n3. A reply attack is made, resetting the compliance: `{\"compliance-2\": \"true\"}`",
              "createdAt": "2024-03-18T06:18:35Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 157,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-03-18T06:19:19Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 158,
              "body": "```suggestion\r\n```",
              "createdAt": "2024-03-18T06:19:26Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            },
            {
              "originalPosition": 153,
              "body": "The TS stores Signed Statements. When we started SCITT, I believe we had the position the TS would have Transparent Statements. \r\nAs of draft 06, a Transparent Statement is assembled on the client. \r\nTeasing out the highlight here, but should we add a term called Registered Signed Statement, which differentiates a Signed Statement that hasn't yet been registered, and a Signed Statement that has been registered, but isn't yet Transparent as the TS doesn't staple the receipt to the Signed Statement.\r\n\r\nSee [Should we add Registered Signed Statement to the terminology #221](https://github.com/ietf-wg-scitt/draft-ietf-scitt-architecture/issues/221)\r\n```suggestion\r\nOnce registered with a Transparency Service, Registered Signed Statements\r\n```",
              "createdAt": "2024-03-18T06:19:49Z",
              "updatedAt": "2024-03-18T06:27:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks5zxjzB",
          "commit": {
            "abbreviatedOid": "2726176"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-18T09:19:31Z",
          "updatedAt": "2024-03-18T09:19:31Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "No, I think this should be left to the instance to decide what's right. It's totally legitimate for multiple apps to submit on behalf of the same Issuer, and for a single app to submit Statements signed by many Issuers.  ",
              "createdAt": "2024-03-18T09:19:31Z",
              "updatedAt": "2024-03-18T09:19:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks5zxmsy",
          "commit": {
            "abbreviatedOid": "2726176"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-18T09:23:21Z",
          "updatedAt": "2024-03-18T09:23:22Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "I don't think accumulated state like this is a very good way to use a ledger. Payloads should be complete and make a full statement about whatever they're saying. In your example above the compliance statement should reference which version of the compliance standard was tested against, and what date the assessment was made.",
              "createdAt": "2024-03-18T09:23:21Z",
              "updatedAt": "2024-03-18T09:23:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks50c041",
          "commit": {
            "abbreviatedOid": "6a81982"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-22T00:14:17Z",
          "updatedAt": "2024-03-22T00:14:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOLJjbks5p5rBA",
      "title": "Spelling and Markdown Nits",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/6",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-03-18T07:40:56Z",
      "updatedAt": "2024-03-22T06:21:44Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "baseRefName": "main",
      "baseRefOid": "94b8e8d94e2f96ac2a76c28d7a6478d367cddff8",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "headRefName": "steve/markdown-nits",
      "headRefOid": "eac6f2384f6e49d6b309aa9ad3dc29df5764a716",
      "closedAt": "2024-03-22T00:12:53Z",
      "mergedAt": "2024-03-22T00:12:53Z",
      "mergedBy": "OR13",
      "mergeCommit": {
        "oid": "fb9c920208e1ba8645ce8b1b27abb9540d20b7d2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLJjbks50c0ee",
          "commit": {
            "abbreviatedOid": "eac6f23"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-22T00:12:33Z",
          "updatedAt": "2024-03-22T00:12:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOLJjbks5wIZ-l",
      "title": "Remove deprecated reference to Decentralized Identifiers",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/7",
      "state": "CLOSED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-21T21:56:40Z",
      "updatedAt": "2024-06-11T14:22:51Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "baseRefName": "main",
      "baseRefOid": "1f93a5bffb2f26b42a71b024ecd4b4d3e42d284f",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "headRefName": "steve/remove-dids",
      "headRefOid": "2b64f0f17e1c338b97ee2cb92dced28fcc9240ae",
      "closedAt": "2024-06-11T14:22:50Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "body": "Just a note that some folks may be required to support DIDs and removing this endpoint, leaves compliance to other documents / profiles.",
          "createdAt": "2024-05-28T14:10:13Z",
          "updatedAt": "2024-05-28T14:10:13Z"
        },
        {
          "author": "mprorock",
          "authorAssociation": "NONE",
          "body": "I am fine with this due to the \"or alternatives\" line",
          "createdAt": "2024-05-28T14:18:43Z",
          "updatedAt": "2024-05-28T14:18:43Z"
        },
        {
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "body": "Based on the editors call, we're reluctant to signal a discouraged use of DIDs that are currently in use. \r\nClosing to discuss in a future date.",
          "createdAt": "2024-06-11T14:22:50Z",
          "updatedAt": "2024-06-11T14:22:50Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOLJjbks57YJtH",
          "commit": {
            "abbreviatedOid": "13e1716"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T01:08:31Z",
          "updatedAt": "2024-05-22T01:09:53Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Has the code in the accompanying reference implementation from community project that supports DIDs actually been removed? It may not be required in the architecture spec (totally agree with that), but I thought SCRAPI should support it as an optional choice and this does not limit this API doesn't obsolete or prohibit that option?",
              "createdAt": "2024-05-22T01:08:31Z",
              "updatedAt": "2024-05-22T01:09:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks57frjg",
          "commit": {
            "abbreviatedOid": "13e1716"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T17:23:15Z",
          "updatedAt": "2024-05-22T17:23:15Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Hmm, we can do additional interesting things in SCRAPI, and I wouldn't limit SCRAPI identities to the one (x.509) referenced in the architecture. That said, are we planning to do anything additional with DIDs, as authors or contributors?\r\nThinking we can pare this down. For reference implementations, are you referring to the [scitt emulator](https://github.com/scitt-community/scitt-api-emulator) which is now out of date and we don't seem to have folks looking to update that specific codebase. Mostly due to language choice, it seems? \r\n",
              "createdAt": "2024-05-22T17:23:15Z",
              "updatedAt": "2024-05-22T17:23:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks57gAo_",
          "commit": {
            "abbreviatedOid": "13e1716"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-22T18:07:09Z",
          "updatedAt": "2024-05-22T18:07:09Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I think we are on the same page, but that means removing DIDs as one the optional identity document components for the architecture one *could* use in SCRAPI is inaccurate no?\r\n\r\nI know what the scitt-emulator is one thing and SCRAPI should converge to it, but I would say replacing it with only x.509 is not correct.",
              "createdAt": "2024-05-22T18:07:09Z",
              "updatedAt": "2024-05-22T18:07:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks57q346",
          "commit": {
            "abbreviatedOid": "13e1716"
          },
          "author": "SteveLasker",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-23T19:29:36Z",
          "updatedAt": "2024-05-23T19:29:36Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "1 is better than none, and 1 is still the first in a collection :) \r\nI do think it would be interesting to explore CWT as another alternative.\r\nHowever, there's no recent activity in this group promoting or supporting DIDs, so cleaning it out clears the path to what we're focusing upon. ",
              "createdAt": "2024-05-23T19:29:36Z",
              "updatedAt": "2024-05-23T19:29:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks57sgkE",
          "commit": {
            "abbreviatedOid": "13e1716"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-23T22:54:19Z",
          "updatedAt": "2024-05-23T22:54:19Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "OK I will try to make my point more clear here with an edit. Sorry to make an editorial change on top of that that is not 100% related, but I have trouble not reading \"to support interoperability issues\" as problems from interoperability. We want to support improved interop, and I keep reading this to sound like we support increasing issues or problems with it. I doubt that is what is intended with this change.\r\n\r\n```suggestion\r\nOptional key discovery and query interfaces are provided to support interoperability between Artifact Repositories and X509 Certificates or alternatives.\r\n```",
              "createdAt": "2024-05-23T22:54:19Z",
              "updatedAt": "2024-05-23T22:54:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks57t4jY",
          "commit": {
            "abbreviatedOid": "0f75130"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-24T03:56:38Z",
          "updatedAt": "2024-05-24T03:56:38Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLJjbks58JqY2",
          "commit": {
            "abbreviatedOid": "0f75130"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-28T14:09:11Z",
          "updatedAt": "2024-05-28T14:09:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLJjbks58J0Fp",
          "commit": {
            "abbreviatedOid": "0f75130"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-05-28T14:18:32Z",
          "updatedAt": "2024-05-28T14:18:33Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nOptional key discovery and query interfaces are provided to support interoperability between Artifact Repositories and X509 Certificates or alternative methods commonly used to support public key discovery.\r\n```",
              "createdAt": "2024-05-28T14:18:32Z",
              "updatedAt": "2024-05-28T14:18:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLJjbks58J0Xy",
          "commit": {
            "abbreviatedOid": "0f75130"
          },
          "author": "mprorock",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-28T14:18:49Z",
          "updatedAt": "2024-05-28T14:18:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOLJjbks5wIavz",
      "title": "Spelling errors and markdown nits",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/8",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-21T21:59:47Z",
      "updatedAt": "2024-05-22T17:20:15Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "baseRefName": "main",
      "baseRefOid": "e53f9b56a9a3bdc93a313597196800ee019d0e7f",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "headRefName": "steve/spelling",
      "headRefOid": "711c9ab43b5388c62dbd2817254e42f72eba2be6",
      "closedAt": "2024-05-22T17:20:15Z",
      "mergedAt": "2024-05-22T17:20:15Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "1f93a5bffb2f26b42a71b024ecd4b4d3e42d284f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLJjbks57XVcl",
          "commit": {
            "abbreviatedOid": "711c9ab"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-21T22:12:15Z",
          "updatedAt": "2024-05-21T22:12:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOLJjbks5wX5Ml",
      "title": "Update API Heading to Sign-Statement",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/11",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The current heading says: \"Issue Statement\", which would refer to a document the issuer is looking to create/issue. This is simply a heading change to reflect the service will Sign the Statement on their behalf, differentiating the statement as a payload. \r\n\r\nThe heading and even the API name are another discussion as the doc, as written, isn't clear if it simply returns a signed statement, the client must re-submit under `/entries`, or the `signed-statement/issue` would also register. Based on that discussion, we may want to also rename the API.\r\n\r\n- It's clear why the API would return the signed statement, for the client to hold and attach to a receipt. \r\n- It's not clear why a user would need to re-submit a signed statement, requiring multiple round trips (see #10)",
      "createdAt": "2024-05-23T19:42:58Z",
      "updatedAt": "2024-06-11T14:23:41Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "baseRefName": "main",
      "baseRefOid": "1f93a5bffb2f26b42a71b024ecd4b4d3e42d284f",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "headRefName": "steve/issue-signed-statement",
      "headRefOid": "01a3d305d2826714a8c9d3d701fdd49f22be5b6a",
      "closedAt": "2024-06-11T14:23:41Z",
      "mergedAt": "2024-06-11T14:23:41Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "e2f23a9ce8621f3a4392608c2f97c85c2a32fcdf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLJjbks57sfpT",
          "commit": {
            "abbreviatedOid": "01a3d30"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-23T22:50:07Z",
          "updatedAt": "2024-05-23T22:50:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLJjbks57wQPC",
          "commit": {
            "abbreviatedOid": "01a3d30"
          },
          "author": "JAG-UK",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Clearer",
          "createdAt": "2024-05-24T08:39:43Z",
          "updatedAt": "2024-05-24T08:39:43Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLJjbks58JpxF",
          "commit": {
            "abbreviatedOid": "01a3d30"
          },
          "author": "OR13",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-28T14:08:17Z",
          "updatedAt": "2024-05-28T14:08:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOLJjbks50t85g",
      "title": "reference and markdown fixes",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/15",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "PR triggered by reference fixes, with additional markdown formatting consistency\r\n\r\n- [Line 700](https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/compare/steve/ref-fixes?expand=1#diff-44525cf8ba2e274f5663e0df19272962aed2b9a06e0fefee5b33bfd7ef23cdf7L700)\r\n- [Line 717](https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/compare/steve/ref-fixes?expand=1#diff-44525cf8ba2e274f5663e0df19272962aed2b9a06e0fefee5b33bfd7ef23cdf7L717)",
      "createdAt": "2024-07-08T16:20:52Z",
      "updatedAt": "2024-07-08T16:23:59Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "baseRefName": "main",
      "baseRefOid": "e2f23a9ce8621f3a4392608c2f97c85c2a32fcdf",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "headRefName": "steve/ref-fixes",
      "headRefOid": "d1efb4600dc61e735d0c35bcfa6818c874f392a2",
      "closedAt": "2024-07-08T16:23:59Z",
      "mergedAt": "2024-07-08T16:23:59Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "edfaae5daecd1f91220b1fa21ee8a7ae507b9673"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 16,
      "id": "PR_kwDOLJjbks50usaM",
      "title": "Shorten text for IETF tools/formatting",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/16",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-08T18:25:31Z",
      "updatedAt": "2024-07-08T18:30:27Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "baseRefName": "main",
      "baseRefOid": "edfaae5daecd1f91220b1fa21ee8a7ae507b9673",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "headRefName": "steve/ietf-tool-fixes",
      "headRefOid": "090490a29cf3618dd7381e456c8a67647270b336",
      "closedAt": "2024-07-08T18:30:27Z",
      "mergedAt": "2024-07-08T18:30:27Z",
      "mergedBy": "SteveLasker",
      "mergeCommit": {
        "oid": "4af7833d502bb657c14b77954346a96ef532226d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLJjbks6A_RtX",
          "commit": {
            "abbreviatedOid": "090490a"
          },
          "author": "aj-stein-nist",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-08T18:28:20Z",
          "updatedAt": "2024-07-08T18:28:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOLJjbks50vDme",
      "title": "Fixes for idnits",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/17",
      "state": "MERGED",
      "author": "SteveLasker",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "including:\r\n\r\n- Referencing a draft in the abstract\r\n- Obsoleted draft updates",
      "createdAt": "2024-07-08T19:20:17Z",
      "updatedAt": "2024-07-08T19:30:51Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "baseRefName": "main",
      "baseRefOid": "4af7833d502bb657c14b77954346a96ef532226d",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "headRefName": "steve/ietf-nits",
      "headRefOid": "20e1c4a6217d0074653b1691555935544c488a6d",
      "closedAt": "2024-07-08T19:30:51Z",
      "mergedAt": "2024-07-08T19:30:51Z",
      "mergedBy": "OR13",
      "mergeCommit": {
        "oid": "780041a42669d8e5c6afee2d55dd507d69f26d28"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 26,
      "id": "PR_kwDOLJjbks537g88",
      "title": "Clarify need (or not) for authentication on Regsiter Signed Statement",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/26",
      "state": "OPEN",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Issue #19\r\n\r\nAlso harmonize title with other endpoints",
      "createdAt": "2024-08-09T10:01:25Z",
      "updatedAt": "2024-08-09T10:01:25Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "baseRefName": "main",
      "baseRefOid": "780041a42669d8e5c6afee2d55dd507d69f26d28",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "headRefName": "jag-uk/19-delineate-auth-from-identity",
      "headRefOid": "90e9a0a9e2bb0f5fbc6e7671b554c9304cc8ff4c",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 27,
      "id": "PR_kwDOLJjbks537_ZF",
      "title": "Extra detail on polling for in-progress receipts",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/27",
      "state": "OPEN",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Issue #23\r\n\r\nExposes another issue with signed statement identifiers which is being fixed in a different PR.",
      "createdAt": "2024-08-09T11:23:17Z",
      "updatedAt": "2024-08-09T11:23:17Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "baseRefName": "main",
      "baseRefOid": "780041a42669d8e5c6afee2d55dd507d69f26d28",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "headRefName": "jag-uk/23-async-operation",
      "headRefOid": "aa76dfcdd4ac3ddc31cf09b2e343d956287bda4a",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 28,
      "id": "PR_kwDOLJjbks538Bvs",
      "title": "Clarify intent statements for mandatory endpoints",
      "url": "https://github.com/ietf-wg-scitt/draft-ietf-scitt-scrapi/pull/28",
      "state": "OPEN",
      "author": "JAG-UK",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Issue #19",
      "createdAt": "2024-08-09T11:30:05Z",
      "updatedAt": "2024-08-09T11:30:05Z",
      "baseRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "baseRefName": "main",
      "baseRefOid": "780041a42669d8e5c6afee2d55dd507d69f26d28",
      "headRepository": "ietf-wg-scitt/draft-ietf-scitt-scrapi",
      "headRefName": "jag-uk/19-intent-statements",
      "headRefOid": "e078cdca28be2ce248b07f861deaaad64926490e",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}